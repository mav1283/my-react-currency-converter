{"version":3,"sources":["components/header/Header.js","components/main/CurrencySelector.js","components/main/InputArea.js","components/footer/Footer.js","App.js","index.js"],"names":["Header","className","CurrencySelector","currencyRates","selectedCurrency","setCurrency","amount","handleChangeAmount","useState","countryFlag","setCountryFlag","useEffect","country_code","country","toString","slice","length","type","value","onChange","map","option","key","src","alt","base_url","InputArea","fromAmount","toAmount","setCurrencyRates","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","isAmountInsideFromCurrency","setAmountInsideFromCurrency","a","fetch","response","json","data","first_currency","Object","keys","rates","base","getInitialCurrencyData","getChangedCurrencyData","e","target","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"iMAUeA,MARf,WACE,OACE,4BAAQC,UAAU,cAChB,oD,qCCyCSC,MA5Cf,YAMI,IALFC,EAKC,EALDA,cACAC,EAIC,EAJDA,iBACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,OACAC,EACC,EADDA,mBACC,EAEqCC,qBAFrC,mBAEMC,EAFN,KAEmBC,EAFnB,KAcD,OAVAC,qBAAU,WACR,IAAIC,EACAC,EACAT,IAEFS,GADAD,EAAeR,EAAiBU,YACTC,MAAM,EAAGH,EAAaI,OAAS,GACtDN,EAAe,GAAD,OATO,gCASP,OAAuBG,EAAvB,oBAEf,CAACT,IAGF,yBAAKH,UAAU,qBACb,2BACEgB,KAAK,SACLhB,UAAU,aACViB,MAAOZ,EACPa,SAAUZ,IAEZ,4BACEN,UAAU,2BACViB,MAAOd,EACPe,SAAUd,GAETF,EAAciB,KAAI,SAAAC,GAAM,OACvB,4BAAQC,IAAKD,EAAQH,MAAOG,GACzBA,OAIP,yBAAKE,IAAKd,EAAae,IAAKf,EAAaR,UAAU,WCtCnDwB,EAAW,yCAqFFC,MAlFf,WAAsB,IAUhBC,EAAYC,EAVG,EACuBpB,mBAAS,IADhC,mBACZL,EADY,KACG0B,EADH,OAEqBrB,qBAFrB,mBAEZsB,EAFY,KAEEC,EAFF,OAGiBvB,qBAHjB,mBAGZwB,EAHY,KAGAC,EAHA,OAIqBzB,qBAJrB,mBAIZ0B,EAJY,KAIEC,EAJF,OAKS3B,mBAAS,GALlB,mBAKZF,EALY,KAKJ8B,EALI,OAM+C5B,oBAChE,GAPiB,mBAMZ6B,EANY,KAMgBC,EANhB,KA8DnB,OAnDID,GACFV,EAAarB,EACbsB,EAAWtB,EAAS4B,GAAgB,IAEpCN,EAAWtB,EACXqB,EAAarB,EAAS4B,GAAgB,GAcxCvB,qBAAU,YACoB,uCAAG,gCAAA4B,EAAA,sEACRC,MAAMf,GADE,cACzBgB,EADyB,gBAEZA,EAASC,OAFG,OAEzBC,EAFyB,OAIvBC,EAAiBC,OAAOC,KAAKH,EAAKI,OAAO,GAC/ClB,EAAiB,CAACc,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UAEjDhB,EAAgBY,EAAKK,MACrBf,EAAcW,GACdT,EAAgBQ,EAAKI,MAAMH,IATE,4CAAH,qDAY5BK,KACC,IAGHtC,qBAAU,WAQJmB,GAAgBE,GAPQ,uCAAG,8BAAAO,EAAA,sEACRC,MAAM,GAAD,OACrBf,EADqB,iBACJK,EADI,oBACoBE,IAFjB,cACzBS,EADyB,gBAIZA,EAASC,OAJG,OAIzBC,EAJyB,OAK7BR,EAAgBQ,EAAKI,MAAMf,IALE,2CAAH,oDAQ1BkB,KAID,CAACpB,EAAcE,IAGhB,yBAAK/B,UAAU,YACb,kBAAC,EAAD,CACEE,cAAeA,EACfC,iBAAkB0B,EAClBzB,YAAa,SAAA8C,GAAC,OAAIpB,EAAgBoB,EAAEC,OAAOlC,QAC3CZ,OAAQqB,EACRpB,mBAlDmB,SAAA4C,GACvBf,EAAUe,EAAEC,OAAOlC,OACnBoB,GAA4B,MAkD1B,kBAAC,EAAD,CACEnC,cAAeA,EACfC,iBAAkB4B,EAClB3B,YAAa,SAAA8C,GAAC,OAAIlB,EAAckB,EAAEC,OAAOlC,QACzCZ,OAAQsB,EACRrB,mBApDiB,SAAA4C,GACrBf,EAAUe,EAAEC,OAAOlC,OACnBoB,GAA4B,QCtBjBe,MARf,WACE,OACE,4BAAQpD,UAAU,cAChB,4ECWSqD,MAVf,WACE,OACE,yBAAKrD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCNNsD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.cf5ae83c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className='App-header'>\r\n      <h1>Currency Converter</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nfunction CurrencySelector({\r\n  currencyRates,\r\n  selectedCurrency,\r\n  setCurrency,\r\n  amount,\r\n  handleChangeAmount\r\n}) {\r\n  const country_flag_url = 'https://www.countryflags.io/'; //PH/flat/64.png'\r\n  const [countryFlag, setCountryFlag] = useState();\r\n\r\n  useEffect(() => {\r\n    let country_code;\r\n    let country;\r\n    if (selectedCurrency) {\r\n      country_code = selectedCurrency.toString();\r\n      country = country_code.slice(0, country_code.length - 1);\r\n      setCountryFlag(`${country_flag_url}${country}/flat/32.png`);\r\n    }\r\n  }, [selectedCurrency]);\r\n\r\n  return (\r\n    <div className='currency-selector'>\r\n      <input\r\n        type='number'\r\n        className='input-type'\r\n        value={amount}\r\n        onChange={handleChangeAmount}\r\n      />\r\n      <select\r\n        className='input-type custom-select'\r\n        value={selectedCurrency}\r\n        onChange={setCurrency}\r\n      >\r\n        {currencyRates.map(option => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <img src={countryFlag} alt={countryFlag} className='flag' />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencySelector;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CurrencySelector from './CurrencySelector';\r\n\r\nconst base_url = 'https://api.exchangeratesapi.io/latest';\r\n//const country_flag_url = 'https://www.countryflags.io/PH/flat/64.png'\r\n\r\nfunction InputArea() {\r\n  const [currencyRates, setCurrencyRates] = useState([]);\r\n  const [fromCurrency, setFromCurrency] = useState();\r\n  const [toCurrency, setToCurrency] = useState();\r\n  const [exchangeRate, setExchangeRate] = useState();\r\n  const [amount, setAmount] = useState(1);\r\n  const [isAmountInsideFromCurrency, setAmountInsideFromCurrency] = useState(\r\n    true\r\n  );\r\n\r\n  let fromAmount, toAmount;\r\n  if (isAmountInsideFromCurrency) {\r\n    fromAmount = amount;\r\n    toAmount = amount * exchangeRate || 0;\r\n  } else {\r\n    toAmount = amount;\r\n    fromAmount = amount / exchangeRate || 0;\r\n  }\r\n\r\n  const handleFromAmount = e => {\r\n    setAmount(e.target.value);\r\n    setAmountInsideFromCurrency(true);\r\n  };\r\n\r\n  const handleToAmount = e => {\r\n    setAmount(e.target.value);\r\n    setAmountInsideFromCurrency(false);\r\n  };\r\n\r\n  /* Load initial fetch base data */\r\n  useEffect(() => {\r\n    const getInitialCurrencyData = async () => {\r\n      let response = await fetch(base_url);\r\n      let data = await response.json();\r\n      /* Select the first currency */\r\n      const first_currency = Object.keys(data.rates)[0];\r\n      setCurrencyRates([data.base, ...Object.keys(data.rates)]);\r\n      /* Set both from and to currencies */\r\n      setFromCurrency(data.base);\r\n      setToCurrency(first_currency);\r\n      setExchangeRate(data.rates[first_currency]);\r\n    };\r\n\r\n    getInitialCurrencyData();\r\n  }, []);\r\n\r\n  /* Load changed base data on currency change*/\r\n  useEffect(() => {\r\n    const getChangedCurrencyData = async () => {\r\n      let response = await fetch(\r\n        `${base_url}?base=${fromCurrency}&symbols=${toCurrency}`\r\n      );\r\n      let data = await response.json();\r\n      setExchangeRate(data.rates[toCurrency]);\r\n    };\r\n    if (fromCurrency && toCurrency) {\r\n      getChangedCurrencyData();\r\n    }\r\n\r\n    //console.log(fromCurrency, toCurrency);\r\n  }, [fromCurrency, toCurrency]);\r\n\r\n  return (\r\n    <div className='App-body'>\r\n      <CurrencySelector\r\n        currencyRates={currencyRates}\r\n        selectedCurrency={fromCurrency}\r\n        setCurrency={e => setFromCurrency(e.target.value)}\r\n        amount={fromAmount}\r\n        handleChangeAmount={handleFromAmount}\r\n      />\r\n      <CurrencySelector\r\n        currencyRates={currencyRates}\r\n        selectedCurrency={toCurrency}\r\n        setCurrency={e => setToCurrency(e.target.value)}\r\n        amount={toAmount}\r\n        handleChangeAmount={handleToAmount}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputArea;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='App-footer'>\r\n      <p>Design and develop by Dani Paolo S. Dullano</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport Header from './components/header/Header';\nimport InputArea from './components/main/InputArea';\nimport Footer from './components/footer/Footer';\nimport './stylesheets/styles.scss';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <InputArea />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/styles.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}